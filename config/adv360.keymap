#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "keycode_japanese.h"

#define SP SPACE
#define MUHE INT_MUHENKAN
#define HENK INT_HENKAN

#define COMBO(NAME, LAYERS, KEYPOS, BINDINGS, TIMEOUT) \
/ { \
    combos { \
        compatible = "zmk,combos"; \
        combo_##NAME { \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
            layers = <LAYERS>; \
            timeout-ms = <TIMEOUT>; \
        }; \
    }; \
}

COMBO(c-a, 0, 29 66, &kp HOME, 100);
COMBO(c-e, 0, 17 66, &kp END, 100);

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      sands: space_and_shift {
          compatible = "zmk,behavior-hold-tap";
          label = "SPACE_AND_SHIFT";
          #binding-cells = <2>;
          flavor = "tap-unless-interrupted";
          tapping-term-ms = <1000>;
          quick-tap-ms = <125>;
          global-quick-tap;
          bindings = <&kp>, <&kp>;
      };

      kr: kill_ring {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp K>, <&macro_c_k>;
          mods = <(MOD_LCTL)>;
      };

    };

  keymap {
    compatible = "zmk,keymap";
//14
//28
//46
//60

    default_layer {
      bindings = <
        &kp ESC   &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog 1                                                                                &mo 3         &kp N6  &kp N7 &kp N8    &kp N9      &kp N0      &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                                                 &kp JP_AT     &kp Y   &kp U  &kp I     &kp O       &kp P       &kp JP_YEN
        &kp LCTRL &kp A     &kp S    &kp D    &kp F      &kp G  &none              &kp LCTRL &kp HOME        &kp PG_UP  &kp RCTRL                     &kp JP_MINUS  &kp H   &kp J  &kr       &kp L       &kp SEMI    &kp SQT
        &sk LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                               &kp END         &kp PG_DN                                              &kp N   &kp M  &kp COMMA &kp DOT     &kp FSLH    &kp JP_BSLH
        &mo 2     &kp GRAVE &kp LALT &kp LEFT &kp RIGHT     &sands LSHFT SP &sands LCTRL DEL &mt LALT MUHE   &hm LGUI HENK &kp BSPC &kp ENTER                               &kp UP &kp DOWN  &kp JP_LBKT &kp JP_RBKT &mo 2
      >;
    };
    keypad {
      bindings = <
        &kp ESC   &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                           &mo 3 &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                            &kp JP_AT &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp NUBS
        &kp LCTRL &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp HOME &kp PG_UP  &kp RCTRL           &kp JP_MINUS &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &sk LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp END  &kp PG_DN                            &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp BSLH
        &mo 2     &kp GRAVE &kp LALT &kp LEFT &kp RIGHT                   &kp SP &kp DEL  &kp MUHE &kp HENK &kp BSPC &kp KP_N0              &kp UP     &kp DOWN     &kp KP_DOT    &kp JP_RBKT        &mo 2
      >;
    };
    fn {
      bindings = <
        &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &tog 1                                           &mo 3 &kp F6 &kp F7 &kp F8 &kp F9  &kp F10 &kp F11
        &trans &trans &trans &trans &trans &trans  &none                                           &none &trans &trans &trans &trans  &trans  &kp F12
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans                      &trans &trans                     &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };
  };
};
